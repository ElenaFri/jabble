generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Player {
  id    Int    @id @default(1)
  name  String @unique @default("Badger")
  score Int    @default(0)

  hand    Tile[]   @relation("PlayerHand")
  animals Animal[] @relation("PlayerAnimals")
  Word    Word[]   @relation("PlayerWords")
}

model Animal {
  id        Int    @id @default(autoincrement())
  name      String @unique
  speciesId Int
  score     Int    @default(0)

  species Species @relation(fields: [speciesId], references: [id])

  playerId Int?
  player   Player? @relation("PlayerAnimals", fields: [playerId], references: [id])
  Word     Word[]  @relation("AnimalWords")
}

model Species {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  animals Animal[]
}

model Tile {
  id          Int           @id @default(autoincrement())
  letter      String
  value       Int
  tilesOnWord TilesOnWord[]

  playerId   Int?
  player     Player?      @relation("PlayerHand", fields: [playerId], references: [id])
  placedTile PlacedTile[]
}

model Word {
  id          Int           @id @default(autoincrement())
  isValid     Boolean?
  tilesOnWord TilesOnWord[]

  boardId Int?
  board   Board? @relation(fields: [boardId], references: [id])

  startX      Int?
  startY      Int?
  orientation Orientation?

  score Int?

  playerId Int?
  player   Player? @relation("PlayerWords", fields: [playerId], references: [id])
  animalId Int?
  animal   Animal? @relation("AnimalWords", fields: [animalId], references: [id])
}

model TilesOnWord {
  id       Int @id @default(autoincrement())
  wordId   Int
  tileId   Int
  position Int

  word Word @relation(fields: [wordId], references: [id])
  tile Tile @relation(fields: [tileId], references: [id])
}

model Board {
  id     Int @id @default(autoincrement())
  width  Int @default(15)
  height Int @default(15)

  words   Word[]
  tiles   PlacedTile[]
  bonuses BoardBonus[]
}

model BoardBonus {
  id      Int       @id @default(autoincrement())
  x       Int
  y       Int
  type    BonusType
  boardId Int
  board   Board     @relation(fields: [boardId], references: [id])

  @@unique([boardId, x, y])
}

enum BonusType {
  DL
  TL
  DW
  TW
}

enum Orientation {
  HORIZONTAL
  VERTICAL
}

model PlacedTile {
  id Int @id @default(autoincrement())
  x  Int
  y  Int

  boardId Int
  board   Board @relation(fields: [boardId], references: [id])

  tileId Int
  tile   Tile    @relation(fields: [tileId], references: [id])
  isNew  Boolean @default(true)
}
